<Window x:Class="Z.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Z"
        xmlns:conv="clr-namespace:Z.Common.Converters"
        xmlns:ext="clr-namespace:Z.Common.Extensions"
        xmlns:conf="clr-namespace:Z.BusinessLogic.ViewModels.Configuration;assembly=Z.BusinessLogic"
        xmlns:cbase="clr-namespace:Z.BusinessLogic.ViewModels.Configuration.Base;assembly=Z.BusinessLogic"
        xmlns:cmod="clr-namespace:Z.BusinessLogic.ViewModels.Configuration.Modules;assembly=Z.BusinessLogic"
        xmlns:cbeh="clr-namespace:Z.BusinessLogic.ViewModels.Configuration.Behavior;assembly=Z.BusinessLogic"
        xmlns:ckey="clr-namespace:Z.BusinessLogic.ViewModels.Configuration.Keywords;assembly=Z.BusinessLogic"
        xmlns:cgen="clr-namespace:Z.BusinessLogic.ViewModels.Configuration.General;assembly=Z.BusinessLogic"
        xmlns:clnc="clr-namespace:Z.BusinessLogic.ViewModels.Configuration.Launcher;assembly=Z.BusinessLogic"
        xmlns:t="clr-namespace:Z.Common.Types;assembly=Z.Common"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Z Configuration" Height="600" Width="800" ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ConfigurationWindowStyles.xaml" />
                <ResourceDictionary Source="CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:SelectedToBooleanConverter x:Key="SelectedToBooleanConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <Grid DockPanel.Dock="Bottom">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Margin="6" Width="150" Height="24" Command="{Binding OkCommand}">OK</Button>
                <Button Margin="6" Width="150" Height="24" Command="{Binding CancelCommand}" IsCancel="True">Cancel</Button>
            </StackPanel>
        </Grid>
        <ListBox x:Name="Pages" DockPanel.Dock="Left" Width="200" Margin="6" ItemsSource="{Binding Pages}">
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type cbase:BaseConfigurationViewModel}">
                    <TextBlock Margin="2" Text="{Binding DisplayName}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <ContentPresenter Content="{Binding ElementName=Pages, Path=SelectedItem}">
            <ContentPresenter.Resources>
                <DataTemplate DataType="{x:Type cgen:GeneralViewModel}">
                    
                    <!-- General settings -->
                    
                    <StackPanel Orientation="Vertical" Style="{StaticResource ConfigurationPage}">
                        <TextBlock Margin="3" Style="{StaticResource Header}">Shortcut</TextBlock>
	                    <Separator />
                        <TextBlock Margin="3" Text="Choose global shortcut to bring the Z window to the front" />
                        <StackPanel Orientation="Horizontal" Style="{StaticResource ItemBlock}">
                            <TextBlock Style="{StaticResource SingleItemDesc}">Modifiers</TextBlock>
                            <CheckBox IsChecked="{Binding ShiftModifier, Mode=TwoWay}" Width="80">Shift</CheckBox>
                            <CheckBox IsChecked="{Binding ControlModifier, Mode=TwoWay}" Width="80">Control</CheckBox>
                            <CheckBox IsChecked="{Binding AltModifier, Mode=TwoWay}" Width="80">Alt</CheckBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Style="{StaticResource ItemBlock}">
                            <TextBlock Style="{StaticResource SingleItemDesc}">Key</TextBlock>
                            <ComboBox Margin="3" ItemsSource="{Binding Keys}" SelectedItem="{Binding Key, Mode=TwoWay}" Width="120">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Description}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Style="{StaticResource ItemBlock}">
                            <TextBlock Style="{StaticResource SingleItemDesc}">Hotkey switches visibility</TextBlock>
                            <CheckBox IsChecked="{Binding HotkeySwitchesVisibility, Mode=TwoWay}">Use hotkey again to hide window</CheckBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Style="{StaticResource ItemBlock}">
                            <TextBlock Style="{StaticResource SingleItemDesc}">Synchronize window positions</TextBlock>
                            <CheckBox IsChecked="{Binding SynchronizeWindowPositions, Mode=TwoWay}">ProCalc window position will be synchronized with Z window</CheckBox>
                        </StackPanel>
                    </StackPanel>
                        
                </DataTemplate>
                <DataTemplate DataType="{x:Type ckey:KeywordsViewModel}">
                    
                    <!-- Keyword settings -->

                    <DockPanel Style="{StaticResource ConfigurationPage}">
                        <TextBlock DockPanel.Dock="Top" Margin="3" Style="{StaticResource Header}">Keywords</TextBlock>
                        <Separator DockPanel.Dock="Top" />

                        <ListView ItemsSource="{Binding Keywords}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Source="{Binding Icon}" Width="16" Height="16" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn DisplayMemberBinding="{Binding ModuleDisplayName, Mode=OneTime}">
                                        <GridViewColumnHeader>Module</GridViewColumnHeader>
                                    </GridViewColumn>
                                    <GridViewColumn DisplayMemberBinding="{Binding ActionDisplayName, Mode=OneTime}">
                                        <GridViewColumnHeader>Action</GridViewColumnHeader>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumnHeader>Override</GridViewColumnHeader>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding Override, Mode=TwoWay}"></CheckBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumnHeader>Keyword</GridViewColumnHeader>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Keyword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"></TextBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type cbeh:BehaviorViewModel}">
                    
                    <!-- Behavior settings -->
                    
                    <StackPanel Orientation="Vertical" Style="{StaticResource ConfigurationPage}">
                        <TextBlock Margin="3" Style="{StaticResource Header}">Executing actions</TextBlock>
                        <Separator />
                        <TextBlock Margin="3" HorizontalAlignment="Stretch" TextWrapping="Wrap">
                            <TextBlock.Inlines>
                                <Run>Choose, what happens, when you press Enter key </Run>
                                <Run FontWeight="Bold">when no suggestion is selected and no keyword is used</Run>
                                <Run>:</Run>
                            </TextBlock.Inlines>
                        </TextBlock>
                        <DockPanel Style="{StaticResource ItemBlock}">
                            <TextBlock DockPanel.Dock="Left" Style="{StaticResource ItemDesc}">Enter key behavior</TextBlock>
                            <StackPanel Orientation="Vertical">
                                <RadioButton IsChecked="{Binding EnterBehavior, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static t:EnterBehavior.ShellExecute}}">Shell execute</RadioButton>
                                <TextBlock Margin="20,8,0,8" TextWrapping="Wrap">
                                    Causes the Z window to behave as Start | Run. When you press Enter, Z will try to execute entered text as command.
                                </TextBlock>
                                <RadioButton IsChecked="{Binding EnterBehavior, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static t:EnterBehavior.ChooseFirst}}">Choose first</RadioButton>
                                <TextBlock Margin="20,8,0,8" TextWrapping="Wrap">
                                    Z will choose first result in suggestions window and perform its action. If there are no suggestions, nothing will happen.
                                </TextBlock>
                                <RadioButton IsChecked="{Binding EnterBehavior, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static t:EnterBehavior.ChoosePerfectlyMatching}}">Choose perfectly match</RadioButton>
                                <TextBlock Margin="20,8,0,8" TextWrapping="Wrap">
                                    Z will try to find perfect match for entered text among modules. If there's only one, it will be executed. If there are more, you will be asked, which one do you want to execute.
                                </TextBlock>
                            </StackPanel>
                        </DockPanel>

                        <TextBlock Margin="3" Style="{StaticResource Header}">Suggestions</TextBlock>
                        <Separator />

                        <DockPanel Style="{StaticResource ItemBlock}">
                            <TextBlock DockPanel.Dock="Left" Style="{StaticResource ItemDesc}">Suggestion delay</TextBlock>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Margin="3">How soon should suggestion window appear, when you stop typing.</TextBlock>
                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Right" Margin="8" VerticalAlignment="Center">
                                        <TextBlock.Inlines>
                                            <Run Text="{Binding ElementName=SuggestionDelaySlider, Path=Value}" />
                                            <Run Text="ms" />
                                        </TextBlock.Inlines>
                                    </TextBlock>
                                    <Slider x:Name="SuggestionDelaySlider" Minimum="100" Maximum="1000" SmallChange="50" LargeChange="100" TickFrequency="50" IsSnapToTickEnabled="True" 
                                            Value="{Binding SuggestionDelay, Mode=TwoWay}" />
                                </DockPanel>
                            </StackPanel>
                        </DockPanel>

                        <DockPanel Style="{StaticResource ItemBlock}">
                            <TextBlock DockPanel.Dock="Left" Style="{StaticResource ItemDesc}">Suggestion sorting</TextBlock>
                            <StackPanel Orientation="Vertical">
                                <RadioButton IsChecked="{Binding SuggestionSorting, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static t:SuggestionSorting.ByModule}}">Sort by module</RadioButton>
                                <RadioButton IsChecked="{Binding SuggestionSorting, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static t:SuggestionSorting.ByDisplay}}">Sort by title</RadioButton>
                                <RadioButton IsChecked="{Binding SuggestionSorting, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static t:SuggestionSorting.ByMatch}}">Sort by match</RadioButton>
                            </StackPanel>
                        </DockPanel>
                        
                    </StackPanel>
                        
                </DataTemplate>
                <DataTemplate DataType="{x:Type cmod:ModulesViewModel}">

                    <!-- Modules -->
                    
                    <DockPanel Style="{StaticResource ConfigurationPage}">
                        <TextBlock DockPanel.Dock="Top" Margin="3" Style="{StaticResource Header}">Modules</TextBlock>
                        <Separator DockPanel.Dock="Top" />

                        <ListView ItemsSource="{Binding Modules}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Source="{Binding Icon}" Width="16" Height="16" Margin="3" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="150" DisplayMemberBinding="{Binding Module, Mode=OneTime}">
                                        <GridViewColumnHeader>Module</GridViewColumnHeader>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumnHeader>Configure</GridViewColumnHeader>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding ShowConfigCommand}" Padding="2" Margin="3">Configure...</Button>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </DockPanel>

                </DataTemplate>
                <DataTemplate DataType="{x:Type clnc:LauncherViewModel}">

                    <DockPanel Style="{StaticResource ConfigurationPage}">
                        <TextBlock DockPanel.Dock="Top" Margin="3" Style="{StaticResource Header}">Launcher</TextBlock>
                        <Separator DockPanel.Dock="Top" />

                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                            <Button Command="{Binding AddSameLevelCommand}">Add item on same level</Button>
                            <Button Command="{Binding AddChildCommand}">Add item as child</Button>
                            <Button Command="{Binding DeleteCommand}">Delete item</Button>
                            <Button Command="{Binding MoveUpCommand}">Move up</Button>
                            <Button Command="{Binding MoveDownCommand}">Move down</Button>
                        </StackPanel>

                        <Grid DockPanel.Dock="Bottom" IsEnabled="{Binding ElementName=LauncherItems, Path=SelectedItem, Converter={StaticResource SelectedToBooleanConverter}}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource ItemDesc}" Margin="3">Name</TextBlock>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="3" Text="{Binding ElementName=LauncherItems, Path=SelectedItem.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource ItemDesc}" Margin="3">Command</TextBlock>
                            <DockPanel Grid.Column="1" Grid.Row="1">
                                <Button DockPanel.Dock="Left" Content="..." Command="{Binding ChoosePathCommand}" />
                                <TextBox Margin="3" Text="{Binding ElementName=LauncherItems, Path=SelectedItem.Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DockPanel>
                        </Grid>

                        <TreeView x:Name="LauncherItems" Margin="3" ItemsSource="{Binding Items}">
                            <i:Interaction.Behaviors>
                                <ext:LauncherTreeViewBehavior SelectedItem="{Binding SelectedItem, Mode=OneWayToSource}" />
                            </i:Interaction.Behaviors>
                            <TreeView.Resources>
                                <Style TargetType="TreeViewItem">
                                    <Style.Setters>
                                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    </Style.Setters>
                                </Style>
                            </TreeView.Resources>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type clnc:LauncherEntryViewModel}" ItemsSource="{Binding Items}">
                                    <Label Content="{Binding Name}" />
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </DockPanel>

                </DataTemplate>
            </ContentPresenter.Resources>
        </ContentPresenter>
    </DockPanel>
</Window>
